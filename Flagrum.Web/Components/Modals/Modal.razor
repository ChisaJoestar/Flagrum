<div class="@Opacity transition-opacity absolute inset-0 @Display flex-row items-center z-50" style="background-color: rgba(0, 0, 0, 0.4)">
    <div class="bg-grey-800 rounded-lg shadow-2xl mx-auto" style="width: 600px; height: 400px">
        <div class="rounded-t-lg bg-grey-700 p-3 row">
            <span class="text-grey-300 flex-grow">@Title</span>
            <span class="material-icons cursor-pointer" @onclick="Close">cancel</span>
        </div>
        <div class="rounded-b-lg p-6 flex flex-row h-full items-center">
            <div class="text-center w-full">
                <h3 class="mb-4 text-grey-300">@Heading</h3>
                <span class="block mb-20">
                    @Subtext
                </span>
            </div>
        </div>
    </div>
</div>

@code
{
    private string Title { get; set; }
    private string Heading { get; set; }
    private string Subtext { get; set; }
    private Action OnClose { get; set; }
    
    private string Display { get; set; } = "hidden";
    private string Opacity { get; set; } = "opacity-0";

    public async void Open(string title, string heading, string subtext, Action onClose)
    {
        Title = title;
        Heading = heading;
        Subtext = subtext;
        OnClose = onClose;
        
        Display = "flex";
        StateHasChanged();

        await Task.Delay(50);

        Opacity = "opacity-100";
        StateHasChanged();
    }
    
    public async void Close()
    {
        Opacity = "opacity-0";
        StateHasChanged();
        OnClose?.Invoke();

        await Task.Delay(200);
        Display = "hidden";
        StateHasChanged();
    }
}
