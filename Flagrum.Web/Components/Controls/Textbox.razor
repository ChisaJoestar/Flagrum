@inherits InputBase<string>

@if (Rows > 0)
{
    <textarea rows="@Rows"
           class="input bg-dark-550"
           style="@Style"
            readonly="@IsReadOnly"
           @bind-value="@CurrentValueAsString"
           @bind-value:event="oninput">
    </textarea>
}
else
{
    <input type="text"
           class="input bg-dark-550"
           style="@Style"
           readonly="@IsReadOnly"
           @bind-value="@CurrentValueAsString"
           @bind-value:event="oninput"/>
}

@code
{
    public enum Variant
    {
        Small,
        Normal,
        Stretch
    }

    [Parameter]
    public Variant Size { get; set; }

    [Parameter]
    public int Rows { get; set; }

    [Parameter]
    public bool IsReadOnly { get; set; }

    private string Style => Size switch
    {
        Variant.Small => "width: 80px;",
        Variant.Normal => "",
        Variant.Stretch => "width: 100%;",
        _ => ""
        };

    protected override bool TryParseValueFromString(string value, out string result, out string validationErrorMessage)
    {
        result = value;
        validationErrorMessage = null;
        return true;
    }
}